<?php
/**
 * @file
 * Install file for ecomma module.
 */

/**
 * Implements hook_schema().
 */
function ecomma_schema() {

  $schema['ecomma_range'] = array(
    'fields' => array(
      'rid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'unique ID of an annotation of a text range',
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'nid of the node with which the annotation is associated',
      ),
      'vid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'version id of the node the annotation is associated with',
      ),
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'uid of the user who submitted the annotation',
      ),
      'tid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Term id  of the annotation or zero if annotation is a comment.',
      ),
      'cid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Comment id of the annotation or zero if annotation is a vocabulary term.',
      ),
      'beg' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Word id of the first word in the annotation text range.',
      ),
      'end' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Word id of the last word in the annotation text range.',
      ),
      'created' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Timestamp for when the annotation was created.',
      ),
    ),
    'primary key' => array('rid'),
  );

  $schema['ecomma_field_enabled'] = array(

    'fields' => array(
      'field_name' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'Machine name of a text field in a specific content type that is ecomma enabled.',
      ),
      'content_type_name' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'Machine name of a content type that contains a text field which is ecomma enabled.',
      ),
      'ecomma_enabled' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Indicates if the text field of a specific content type is ecomma enabled or not.',
      ),
    ),
  );

    $schema['ecomma_node_text_direction'] = array(

    'fields' => array(
      'nid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'nid of the node for which the direction of text has to be set.',
      ),
      'cid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'cid of the comment for which the direction of text has to be set.',
      ),
      'rtl_enabled' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Indicates if the node text needs to be shown in rlt or lrt direction.',
      ),
    ),
  );


  return $schema;

}
